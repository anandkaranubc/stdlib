/**
* @license Apache-2.0
*
* Copyright (c) 2025 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var addon = require( './../src/addon.node' );


// MAIN //

/**
* Evaluates the natural logarithm of the probability mass function (PMF) for a hypergeometric distribution with population size `N`, subpopulation size `K`, and number of draws `n`.
*
* @private
* @param {number} x - input value
* @param {number} N - population size
* @param {number} K - subpopulation size
* @param {number} n - number of draws
* @returns {number} evaluated logPMF
*
* @example
* var logPmf = logpmf( 1.0, 16, 11, 4 );
* // returns ~-0.29
*
* @example
* var logPmf = logpmf( 2.0, 16, 11, 4 );
* // returns ~-0.91
*
* @example
* var logPmf = logpmf( 0.0, 16, 11, 4 );
* // returns ~-1.11
*
* @example
* var logPmf = logpmf( 3.5, 16, 11, 4 );
* // returns NaN
*
* @example
* var logPmf = logpmf( NaN, 16, 11, 4 );
* // returns NaN
*
* @example
* var logPmf = logpmf( 1.0, NaN, 11, 4 );
* // returns NaN
*
* @example
* var logPmf = logpmf( 1.0, 16, NaN, 4 );
* // returns NaN
*
* @example
* var logPmf = logpmf( 1.0, 16, 11, NaN );
* // returns NaN
*/
function logpmf( x, N, K, n ) {
	return addon( x, N, K, n );
}


// EXPORTS //

module.exports = logpmf;
